---
- name: Initialize Ubuntu server
  hosts: vpn_server
  become: true
  become_user: root
  vars_prompt:
    - name: remote_username
      prompt: Enter a username
      private: no
    - name: remote_userpass
      prompt: Enter a password
      private: no
    - name: public_key_path
      prompt: Enter the path to the public key you wish to use to SSH into the server
      private: no
  vars:
    source_dir: ~/.ssh
    remote_path: "/home/{{remote_username}}/.ssh"
  tasks:
    - name: Update and Upgrade Ubuntu
      become: true
      apt:
        update_cache: yes
        upgrade: yes
    # - name: Create new user & assign roles
    #   ansible.builtin.user:
    #     name: "{{ remote_username }}"
    #     password: "{{ remote_userpass|password_hash('sha512') }}"
    #     groups: "sudo"
    # - name: Edit sudoers config
    #   ansible.builtin.lineinfile:
    #     path: /etc/sudoers
    #     state: present
    #     regexp: "^%sudo="
    #     line: "%sudo ALL=(ALL) NOPASSWD: ALL"
    #     validate: /usr/sbin/visudo -cf %s
    # - name: UFW install
    #   ansible.builtin.package:
    #     name: ufw
    #     state: present
    # - name: UFW enable logging
    #   community.general.ufw:
    #     logging: "on"
    # - name: UFW enable OpenSSH
    #   community.general.ufw:
    #     rule: allow
    #     name: OpenSSH
    # - name: UFW enable with default deny policy
    #   community.general.ufw:
    #     state: enabled
    #     policy: deny
    # - name: Rsync files to remote server
    #   ansible.posix.synchronize:
    #     src: "{{source_dir}}"
    #     dest: "{{ remote_path }}"
    #     rsync_opts: "-avz --delete"
    #   become: false
    # - name: Set ownership and permissions on copied files
    #   file:
    #     path: "/home/{{remote_username}}/.ssh"
    #     owner: "{{remote_username}}"
    #     group: "{{remote_username}}"
    #     recurse: true
    # - name: Copy file
    #   copy:
    #     content: "{{ lookup('file', public_key_path) }}"
    #     dest: "/home/{{ remote_username }}/.ssh/authorized_keys"
    #     owner: "{{ remote_username }}"
    #     group: "{{ remote_username }}"
    #     mode: "0600"
    # - name: Set ownership and permissions on copied files
    #   file:
    #     path: "/home/{{remote_username}}/.ssh"
    #     owner: "{{remote_username}}"
    #     group: "{{remote_username}}"
    #     recurse: true
